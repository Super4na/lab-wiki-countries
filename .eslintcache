[{"C:\\Users\\Ana\\Desktop\\AugOct2021\\Module3_week1\\labs\\lab-wiki-countries\\src\\index.js":"1","C:\\Users\\Ana\\Desktop\\AugOct2021\\Module3_week1\\labs\\lab-wiki-countries\\src\\reportWebVitals.js":"2","C:\\Users\\Ana\\Desktop\\AugOct2021\\Module3_week1\\labs\\lab-wiki-countries\\src\\App.js":"3","C:\\Users\\Ana\\Desktop\\AugOct2021\\Module3_week1\\labs\\lab-wiki-countries\\src\\components\\Navbar.js":"4","C:\\Users\\Ana\\Desktop\\AugOct2021\\Module3_week1\\labs\\lab-wiki-countries\\src\\components\\CountriesList.js":"5","C:\\Users\\Ana\\Desktop\\AugOct2021\\Module3_week1\\labs\\lab-wiki-countries\\src\\components\\CountryDetails.js":"6"},{"size":446,"mtime":1632403212148,"results":"7","hashOfConfig":"8"},{"size":375,"mtime":1632402823220,"results":"9","hashOfConfig":"8"},{"size":744,"mtime":1632413929266,"results":"10","hashOfConfig":"8"},{"size":322,"mtime":1632413148773,"results":"11","hashOfConfig":"8"},{"size":915,"mtime":1632413713561,"results":"12","hashOfConfig":"8"},{"size":2028,"mtime":1632412991645,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1u1j7mw",{"filePath":"16","messages":"17","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"18","messages":"19","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"20","messages":"21","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"23","messages":"24","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"25","usedDeprecatedRules":"22"},{"filePath":"26","messages":"27","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"28","usedDeprecatedRules":"22"},"C:\\Users\\Ana\\Desktop\\AugOct2021\\Module3_week1\\labs\\lab-wiki-countries\\src\\index.js",[],"C:\\Users\\Ana\\Desktop\\AugOct2021\\Module3_week1\\labs\\lab-wiki-countries\\src\\reportWebVitals.js",[],"C:\\Users\\Ana\\Desktop\\AugOct2021\\Module3_week1\\labs\\lab-wiki-countries\\src\\App.js",["29","30","31","32"],"C:\\Users\\Ana\\Desktop\\AugOct2021\\Module3_week1\\labs\\lab-wiki-countries\\src\\components\\Navbar.js",[],["33","34"],"C:\\Users\\Ana\\Desktop\\AugOct2021\\Module3_week1\\labs\\lab-wiki-countries\\src\\components\\CountriesList.js",["35","36"],"import countriesJSON from '../countries.json';\r\n\r\nimport React, { useState } from 'react';\r\nimport { Link, NavLink } from 'react-router-dom';\r\n\r\nfunction CountriesList() {\r\n  const [countries, setCountries] = useState(countriesJSON);\r\n\r\n  return (\r\n    <div class=\"col-5\" style={{maxHeight: \"90vh\", overflow: \"scroll\"}}>\r\n      <div class=\"list-group\">\r\n        <ul>\r\n          {countries.map((country) => {\r\n            return (\r\n              <li class=\"list-group-item list-group-item-action\">\r\n                <img\r\n                  src={`https://www.countryflags.io/${country.alpha2Code}/flat/32.png`}\r\n                  alt=\"country flag\"\r\n                  width=\"50px\"\r\n                />\r\n                <NavLink to={`/${country.alpha3Code}`}>{country.name}</NavLink>\r\n              </li>\r\n            );\r\n          })}\r\n        </ul>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default CountriesList;\r\n","C:\\Users\\Ana\\Desktop\\AugOct2021\\Module3_week1\\labs\\lab-wiki-countries\\src\\components\\CountryDetails.js",["37","38","39"],"import React, { useState, useEffect } from 'react';\r\nimport countriesJSON from '../countries.json';\r\nimport { Link, NavLink } from 'react-router-dom';\r\nimport { Switch, Route } from 'react-router-dom';\r\n\r\nfunction CountryDetails(props) {\r\n  const [country, setCountry] = useState({});\r\n\r\n  //Component lifecycle\r\n  //Mounting phase - happens the first time the component is rendered\r\n  //used to get information from API\r\n  useEffect(() => {\r\n    //code in here, will happen one time when the component is first rendered\r\n    const countryCode = props.match.params.id;\r\n    console.log(countryCode);\r\n    const foundCountry = countriesJSON.find(\r\n      (country) => country.alpha3Code === countryCode\r\n    );\r\n    console.log(foundCountry);\r\n\r\n    setCountry(foundCountry);\r\n  }, [props.match.params.id]); // <= empty array is called the dependency array\r\n\r\n  return (\r\n    <>\r\n      <div class=\"col-7\">\r\n        <img\r\n          src={`https://www.countryflags.io/${country.alpha2Code}/flat/32.png`}\r\n          alt=\"country flag\"\r\n          width=\"150px\"\r\n        />\r\n        <h1>{country.name}</h1>\r\n        <table class=\"table\">\r\n          <thead></thead>\r\n          <tbody>\r\n            <tr>\r\n              <td width=\"30%\">Capital</td>\r\n              <td>{country.capital}</td>\r\n            </tr>\r\n            <tr>\r\n              <td>Area</td>\r\n              <td>\r\n                {country.area} km <sup>2</sup>\r\n              </td>\r\n            </tr>\r\n            <tr>\r\n              <td>Borders</td>\r\n              <td>\r\n                <ul>\r\n                  {country.borders &&\r\n                    country.borders.map((country) => {\r\n                      return (\r\n                        <li>\r\n                          <NavLink to={`/${country}`}>{country}</NavLink>\r\n                        </li>\r\n                      );\r\n                    })}\r\n                </ul>\r\n              </td>\r\n            </tr>\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default CountryDetails;\r\n",{"ruleId":"40","severity":1,"message":"41","line":1,"column":8,"nodeType":"42","messageId":"43","endLine":1,"endColumn":12},{"ruleId":"40","severity":1,"message":"44","line":3,"column":17,"nodeType":"42","messageId":"43","endLine":3,"endColumn":25},{"ruleId":"40","severity":1,"message":"45","line":5,"column":10,"nodeType":"42","messageId":"43","endLine":5,"endColumn":14},{"ruleId":"40","severity":1,"message":"46","line":5,"column":16,"nodeType":"42","messageId":"43","endLine":5,"endColumn":23},{"ruleId":"47","replacedBy":"48"},{"ruleId":"49","replacedBy":"50"},{"ruleId":"40","severity":1,"message":"45","line":4,"column":10,"nodeType":"42","messageId":"43","endLine":4,"endColumn":14},{"ruleId":"40","severity":1,"message":"51","line":7,"column":21,"nodeType":"42","messageId":"43","endLine":7,"endColumn":33},{"ruleId":"40","severity":1,"message":"45","line":3,"column":10,"nodeType":"42","messageId":"43","endLine":3,"endColumn":14},{"ruleId":"40","severity":1,"message":"52","line":4,"column":10,"nodeType":"42","messageId":"43","endLine":4,"endColumn":16},{"ruleId":"40","severity":1,"message":"53","line":4,"column":18,"nodeType":"42","messageId":"43","endLine":4,"endColumn":23},"no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","'useState' is defined but never used.","'Link' is defined but never used.","'NavLink' is defined but never used.","no-native-reassign",["54"],"no-negated-in-lhs",["55"],"'setCountries' is assigned a value but never used.","'Switch' is defined but never used.","'Route' is defined but never used.","no-global-assign","no-unsafe-negation"]